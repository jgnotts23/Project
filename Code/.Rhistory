pwd
ls
getwd()
setwd('~/Documents/Project/Code')
getwd()
timedata <- read.csv(file="/media/jacob/Samsung_external/time_data.csv", header=TRUE, sep=",")
View(timedata)
timedata_confirmed <- read.csv(file="/media/jacob/Samsung_external/time_data_confirmed.csv", header=TRUE, sep=",")
View(timedata)
View(timedata)
timedata['Day_of_week']
as.data.frame(table(timedata['Day_of_week']))
counts <- as.data.frame(table(timedata['Day_of_week']))
confirmed_counts <- as.data.frame(table(timedata_confirmed['Day_of_week']))
counts
confirmed_counts
frequencies <- confirmed_counts / counts
frequencies
counts
confirmed_counts
confirmed_counts[1]
confirmed_counts[2]
frequencies <- confirmed_counts[2] / counts[2]
frequencies
days <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
counts <- counts[days]
counts
counts <- counts[1][days]
counts[1] <- counts[1][days]
days <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
counts[match(days, counts$var1),]
counts
counts[match(days, counts[1]),]
require(gdata)
install.packages("gdata")
require(gdata)
counts$var1 <- reorder.factor(counts$var1, new.order=days)
result <- counts[-1]
result
row.names(result) <- counts$var1
result
counts
row.names(result) <- counts$Var1
result
weekdays <- as.data.frame(table(timedata['Day_of_week']))
weekdays_confirmed <- as.data.frame(table(timedata_confirmed['Day_of_week']))
days <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
counts <- weekdays[-1]
row.names(counts) <- weekdays$Var1
counts
counts_confirmed <- weekdays_confirmed[-1]
counts_confirmed <- weekdays_confirmed[-1]
row.names(counts_confirmed) <- weekdays_confirmed$Var1
frequencies <- confirmed_counts / counts
confirmed_counts
frequencies <- counts_confirmed / counts
frequencies
type(frequencies)
typeof(frequencies)
frequencies[days,]
frequencies <- frequencies[days,]
frequencies
typeof(frequncies)
typeof(frequencies)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
dat <- data.frame(
week = factor(days, levels=days),
total_bill = frequencies
)
ggplot(data=dat, aes(x=time, y=total_bill, fill=time)) +
geom_bar(colour="black", fill="#DD8888", width=.8, stat="identity") +
guides(fill=FALSE) +
xlab("Time of day") + ylab("Total bill") +
ggtitle("Average bill for 2 people")
days <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
dat <- data.frame(
week = factor(days, levels=days),
total_bill = frequencies
)
dat
dat <- data.frame(
time = factor(days, levels=days),
total_bill = frequencies
)
ggplot(data=dat, aes(x=time, y=total_bill, fill=time)) +
geom_bar(colour="black", fill="#DD8888", width=.8, stat="identity") +
guides(fill=FALSE) +
xlab("Time of day") + ylab("Total bill") +
ggtitle("Average bill for 2 people")
dat <- data.frame(
day_of_week = factor(days, levels=days),
gunshot_frequency = frequencies
)
ggplot(data=dat, aes(x=day_of_week, y=gunshot_frequnecy, fill=day_of_week)) +
geom_bar(colour="black", fill="#DD8888", width=.8, stat="identity") +
guides(fill=FALSE) +
xlab("Day of week") + ylab("Gunshot frequency")
ggplot(data=dat, aes(x=day_of_week, y=gunshot_frequency, fill=day_of_week)) +
geom_bar(colour="black", fill="#DD8888", width=.8, stat="identity") +
guides(fill=FALSE) +
xlab("Day of week") + ylab("Gunshot frequency")
frequencies <- (counts_confirmed / counts) * 100
frequencies <- frequencies[days,]
dat <- data.frame(
day_of_week = factor(days, levels=days),
gunshot_frequency = frequencies
)
ggplot(data=dat, aes(x=day_of_week, y=gunshot_frequency, fill=day_of_week)) +
geom_bar(colour="black", fill="#DD8888", width=.8, stat="identity") +
guides(fill=FALSE) +
xlab("Day of week") + ylab("Gunshot frequency")
ggplot(data=dat, aes(x=day_of_week, y=gunshot_frequency, fill=day_of_week)) +
geom_bar(colour="black", fill="#DD8888", width=.8, stat="identity") +
guides(fill=FALSE) +
xlab("Day of week") + ylab("Percentage of clips containing gunshot")
savePlot <- function(myPlot) {
pdf("myPlot.pdf")
print(myPlot)
dev.off()
}
savePlot <- function(myPlot) {
plotname <- paste0("../Results/", myPlot, ".pdf")
pdf(plotname)
print(myPlot)
dev.off()
}
savePlot(weekday_plot)
weekday_plot <- ggplot(data=dat, aes(x=day_of_week, y=gunshot_frequency, fill=day_of_week)) +
geom_bar(colour="black", fill="#DD8888", width=.8, stat="identity") +
guides(fill=FALSE) +
xlab("Day of week") + ylab("Percentage of clips containing gunshot")
savePlot(weekday_plot)
plotname <- paste0("../Results/", myPlot, ".pdf")
savePlot <- function(myPlot) {
plotname <- paste0("../Results/", as.character(myPlot), ".pdf")
pdf(plotname)
print(myPlot)
dev.off()
}
savePlot(weekday_plot)
weekday_plot
savePlot <- function(myPlot, plotname) {
pdf(plotname)
print(myPlot)
dev.off()
}
savePlot(weekday_plot, '../Results/weekday_plot.pdf')
# Time of day analysis
hours <- as.data.frame(table(timedata['Hour']))
hours
hours_confirmed <- as.data.frame(table(timedata_confirmed['Hour']))
hours_list <- c("0", "1", "2", "5", "6", "7", "8", "9", "14", "15", "16", "17", "18", "21", "22", "23")
counts <- hours[-1]
row.names(counts) <- hours$Var1
counts_confirmed <- hours_confirmed[-1]
row.names(counts_confirmed) <- hours_confirmed$Var1
counts
counts_confirmed
frequencies <- (counts_confirmed / counts) * 100
frequencies <- frequencies[hours_list,]
frequencies
dat <- data.frame(
hour_of_day = factor(hours_list, levels=hours_list),
gunshot_frequency = frequencies
)
weekday_plot <- ggplot(data=dat, aes(x=hour_of_day, y=gunshot_frequency, fill=hour_of_day)) +
geom_bar(colour="black", fill="#DD8888", width=.8, stat="identity") +
guides(fill=FALSE) +
xlab("Hour of day") + ylab("Percentage of clips containing gunshot")
savePlot(weekday_plot, '../Results/hourofday_plot.pdf')
numbers <- seq(0, 23, by=1)
nubers
numbers
weekday_plot <- ggplot(data=dat, aes(x=numbers, y=gunshot_frequency, fill=hour_of_day)) +
geom_bar(colour="black", fill="#DD8888", width=.8, stat="identity") +
guides(fill=FALSE) +
xlab("Hour of day") + ylab("Percentage of clips containing gunshot")
savePlot(weekday_plot, '../Results/hourofday_plot.pdf')
dat
ggplot(dat, aes(hour_of_day, gunshot_frequency)) +
geom_point() +
theme_minimal()
ggplot(dat, aes(hour_of_day, gunshot_frequency)) +
geom_point() +
theme_minimal()
x <- ggplot(dat, aes(hour_of_day, gunshot_frequency)) +
geom_point() +
theme_minimal()
x
frequencies
dat <- data.frame(
hour_of_day = hours_list
gunshot_frequency = frequencies
)
dat <- data.frame(
hour_of_day = hours_list
gunshot_frequency = frequencies)
dat <- data.frame(
hour_of_day = hours_list,
gunshot_frequency = frequencies
)
x <- ggplot(dat, aes(hour_of_day, gunshot_frequency)) +
geom_point() +
theme_minimal()
x
weekday_plot
dat <- data.frame(
day_of_week = factor(days, levels=days),
gunshot_frequency = frequencies
)
weekday_plot <- ggplot(data=dat, aes(x=day_of_week, y=gunshot_frequency, fill=day_of_week)) +
geom_bar(colour="black", fill="#DD8888", width=.8, stat="identity") +
guides(fill=FALSE) +
xlab("Day of week") + ylab("Percentage of clips containing gunshot")
weekday_plot
days <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
counts <- weekdays[-1]
row.names(counts) <- weekdays$Var1
counts_confirmed <- weekdays_confirmed[-1]
row.names(counts_confirmed) <- weekdays_confirmed$Var1
frequencies <- (counts_confirmed / counts) * 100
frequencies <- frequencies[days,]
dat <- data.frame(
day_of_week = factor(days, levels=days),
gunshot_frequency = frequencies
)
weekday_plot <- ggplot(data=dat, aes(x=day_of_week, y=gunshot_frequency, fill=day_of_week)) +
geom_bar(colour="black", fill="#DD8888", width=.8, stat="identity") +
guides(fill=FALSE) +
xlab("Day of week") + ylab("Percentage of clips containing gunshot")
weekday_plot
